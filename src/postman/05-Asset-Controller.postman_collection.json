{
	"info": {
		"_postman_id": "asset-controller-ywc-api",
		"name": "YWC API - Asset Controller",
		"description": "Complete Asset Controller testing with all CRUD operations for the YWC Financial Forms API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Login for Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.token) {",
									"        pm.collectionVariables.set('authToken', response.data.token);",
									"        pm.collectionVariables.set('coachId', response.data.user.id);",
									"        console.log('Token saved:', response.data.token);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"coach@ywc.com\",\n  \"password\": \"coach123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal details created for testing', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.personal_id) {",
									"        pm.collectionVariables.set('personalId', response.data.personal_id);",
									"        console.log('Test Personal ID saved:', response.data.personal_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coach_id\": \"{{coachId}}\",\n  \"applicant_type\": \"PrimaryApplicant\",\n  \"salutation\": \"Mr.\",\n  \"first_name\": \"Asset\",\n  \"last_name\": \"Owner\",\n  \"street\": \"Wealth Street\",\n  \"house_number\": \"100\",\n  \"postal_code\": \"10001\",\n  \"city\": \"Stuttgart\",\n  \"email\": \"asset.owner@example.com\",\n  \"phone\": \"+49111222333\",\n  \"marital_status\": \"Single\",\n  \"birth_date\": \"1980-12-10\",\n  \"birth_place\": \"Stuttgart\",\n  \"nationality\": \"German\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/personal-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Asset CRUD Operations",
			"item": [
				{
					"name": "Create Real Estate Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Real estate asset created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('asset_id');",
									"    ",
									"    if (response.data && response.data.asset_id) {",
									"        pm.collectionVariables.set('realEstateAssetId', response.data.asset_id);",
									"        console.log('Real Estate Asset ID saved:', response.data.asset_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"real_estate_residential\": 350000.00,\n  \"real_estate_commercial\": 0.00,\n  \"securities_stocks\": 25000.00,\n  \"securities_funds\": 15000.00,\n  \"securities_bonds\": 10000.00,\n  \"deposits_savings\": 5000.00,\n  \"deposits_fixed\": 20000.00,\n  \"deposits_current\": 3000.00,\n  \"insurance_life\": 50000.00,\n  \"insurance_pension\": 80000.00,\n  \"insurance_health\": 0.00,\n  \"other_assets\": 5000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('asset_id');",
									"    pm.expect(response.data).to.have.property('real_estate_residential');",
									"    console.log('Asset details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets/{{realEstateAssetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"{{realEstateAssetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assets by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Assets by personal ID retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Asset records for person:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Asset Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('All asset records retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Total asset records:', response.data.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset details updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('asset_id');",
									"    console.log('Updated asset details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"real_estate_residential\": 375000.00,\n  \"real_estate_commercial\": 50000.00,\n  \"securities_stocks\": 30000.00,\n  \"securities_funds\": 20000.00,\n  \"securities_bonds\": 15000.00,\n  \"deposits_savings\": 8000.00,\n  \"deposits_fixed\": 25000.00,\n  \"deposits_current\": 5000.00,\n  \"insurance_life\": 55000.00,\n  \"insurance_pension\": 90000.00,\n  \"other_assets\": 10000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets/{{realEstateAssetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"{{realEstateAssetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial Update Asset Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset details partially updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Partially updated asset:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"securities_stocks\": 35000.00,\n  \"deposits_savings\": 10000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets/{{realEstateAssetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"{{realEstateAssetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Asset Analysis",
			"item": [
				{
					"name": "Get Asset Summary by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset summary retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Asset summary:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets/personal/{{personalId}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"personal",
								"{{personalId}}",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Asset Value Range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset filter by value range successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Filtered asset records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets?min_total_value=200000&max_total_value=800000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							],
							"query": [
								{
									"key": "min_total_value",
									"value": "200000"
								},
								{
									"key": "max_total_value",
									"value": "800000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Real Estate Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Asset filter by real estate value successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Real estate filter results:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets?min_real_estate=300000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							],
							"query": [
								{
									"key": "min_real_estate",
									"value": "300000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Asset Type Operations",
			"item": [
				{
					"name": "Create Investment Portfolio Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Investment portfolio asset created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.asset_id) {",
									"        pm.collectionVariables.set('investmentAssetId', response.data.asset_id);",
									"        console.log('Investment Asset ID saved:', response.data.asset_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"securities_stocks\": 50000.00,\n  \"securities_funds\": 30000.00,\n  \"securities_bonds\": 20000.00,\n  \"deposits_savings\": 15000.00,\n  \"deposits_fixed\": 40000.00,\n  \"deposits_current\": 8000.00,\n  \"other_assets\": 12000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assets by Type (Securities)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Securities assets retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Securities assets:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets?asset_type=securities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							],
							"query": [
								{
									"key": "asset_type",
									"value": "securities"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Create with Invalid Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid personal ID rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"invalid-uuid\",\n  \"real_estate_residential\": 350000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Negative Asset Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Negative asset values rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"real_estate_residential\": -100000.00,\n  \"securities_stocks\": -5000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Delete Real Estate Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Real estate asset deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Real estate asset deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets/{{realEstateAssetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"{{realEstateAssetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Investment Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Investment asset deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Investment asset deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/assets/{{investmentAssetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"assets",
								"{{investmentAssetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Test personal details deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Test personal details deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/personal-details/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "coachId",
			"value": "",
			"type": "string"
		},
		{
			"key": "personalId",
			"value": "",
			"type": "string"
		},
		{
			"key": "realEstateAssetId",
			"value": "",
			"type": "string"
		},
		{
			"key": "investmentAssetId",
			"value": "",
			"type": "string"
		}
	]
} 