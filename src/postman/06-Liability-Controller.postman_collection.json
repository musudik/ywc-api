{
	"info": {
		"_postman_id": "liability-controller-ywc-api",
		"name": "YWC API - Liability Controller",
		"description": "Complete Liability Controller testing with all CRUD operations for the YWC Financial Forms API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Login for Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.token) {",
									"        pm.collectionVariables.set('authToken', response.data.token);",
									"        pm.collectionVariables.set('coachId', response.data.user.id);",
									"        console.log('Token saved:', response.data.token);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"coach@ywc.com\",\n  \"password\": \"coach123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal details created for testing', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.personal_id) {",
									"        pm.collectionVariables.set('personalId', response.data.personal_id);",
									"        console.log('Test Personal ID saved:', response.data.personal_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coach_id\": \"{{coachId}}\",\n  \"applicant_type\": \"PrimaryApplicant\",\n  \"salutation\": \"Ms.\",\n  \"first_name\": \"Liability\",\n  \"last_name\": \"Manager\",\n  \"street\": \"Debt Street\",\n  \"house_number\": \"50\",\n  \"postal_code\": \"50001\",\n  \"city\": \"Cologne\",\n  \"email\": \"liability.manager@example.com\",\n  \"phone\": \"+49777888999\",\n  \"marital_status\": \"Divorced\",\n  \"birth_date\": \"1992-03-25\",\n  \"birth_place\": \"Cologne\",\n  \"nationality\": \"German\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/personal-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Liability CRUD Operations",
			"item": [
				{
					"name": "Create Home Loan Liability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Home loan liability created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('liability_id');",
									"    ",
									"    if (response.data && response.data.liability_id) {",
									"        pm.collectionVariables.set('homeLoanId', response.data.liability_id);",
									"        console.log('Home Loan ID saved:', response.data.liability_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"loan_type\": \"HomeLoan\",\n  \"outstanding_amount\": 250000.00,\n  \"monthly_payment\": 1200.00,\n  \"interest_rate\": 2.5,\n  \"remaining_term_months\": 240,\n  \"lender_name\": \"Deutsche Bank\",\n  \"loan_purpose\": \"Primary residence purchase\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liability by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Liability details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('liability_id');",
									"    pm.expect(response.data).to.have.property('loan_type');",
									"    pm.expect(response.data).to.have.property('outstanding_amount');",
									"    console.log('Liability details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{homeLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{homeLoanId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liabilities by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Liabilities by personal ID retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Liability records for person:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Liability Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('All liability records retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Total liability records:', response.data.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Liability Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Liability details updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('liability_id');",
									"    console.log('Updated liability details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"outstanding_amount\": 240000.00,\n  \"monthly_payment\": 1150.00,\n  \"interest_rate\": 2.3,\n  \"remaining_term_months\": 235,\n  \"lender_name\": \"Deutsche Bank AG\",\n  \"loan_purpose\": \"Primary residence purchase - refinanced\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{homeLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{homeLoanId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial Update Liability Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Liability details partially updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Partially updated liability:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"outstanding_amount\": 235000.00,\n  \"monthly_payment\": 1100.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{homeLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{homeLoanId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Loan Type Operations",
			"item": [
				{
					"name": "Create Car Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Car loan created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.liability_id) {",
									"        pm.collectionVariables.set('carLoanId', response.data.liability_id);",
									"        console.log('Car Loan ID saved:', response.data.liability_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"loan_type\": \"CarLoan\",\n  \"outstanding_amount\": 25000.00,\n  \"monthly_payment\": 450.00,\n  \"interest_rate\": 4.5,\n  \"remaining_term_months\": 60,\n  \"lender_name\": \"BMW Financial Services\",\n  \"loan_purpose\": \"Vehicle purchase - BMW X3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Personal Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal loan created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.liability_id) {",
									"        pm.collectionVariables.set('personalLoanId', response.data.liability_id);",
									"        console.log('Personal Loan ID saved:', response.data.liability_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"loan_type\": \"PersonalLoan\",\n  \"outstanding_amount\": 15000.00,\n  \"monthly_payment\": 350.00,\n  \"interest_rate\": 6.8,\n  \"remaining_term_months\": 48,\n  \"lender_name\": \"Commerzbank\",\n  \"loan_purpose\": \"Home renovation\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Loan Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Filter by loan type successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Filtered loan records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities?loan_type=HomeLoan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							],
							"query": [
								{
									"key": "loan_type",
									"value": "HomeLoan"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Liability Analysis",
			"item": [
				{
					"name": "Get Liability Summary by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Liability summary retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Liability summary:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/personal/{{personalId}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"personal",
								"{{personalId}}",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Outstanding Amount Range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Filter by outstanding amount successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Filtered liability records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities?min_amount=20000&max_amount=300000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							],
							"query": [
								{
									"key": "min_amount",
									"value": "20000"
								},
								{
									"key": "max_amount",
									"value": "300000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Create with Invalid Loan Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid loan type rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"loan_type\": \"InvalidLoanType\",\n  \"outstanding_amount\": 50000.00,\n  \"monthly_payment\": 500.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Negative Amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Negative amounts rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"loan_type\": \"PersonalLoan\",\n  \"outstanding_amount\": -10000.00,\n  \"monthly_payment\": -200.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/liabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Delete Home Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Home loan deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Home loan deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{homeLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{homeLoanId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Car Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Car loan deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Car loan deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{carLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{carLoanId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Personal Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal loan deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Personal loan deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/liabilities/{{personalLoanId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"liabilities",
								"{{personalLoanId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Test personal details deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Test personal details deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/personal-details/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "coachId",
			"value": "",
			"type": "string"
		},
		{
			"key": "personalId",
			"value": "",
			"type": "string"
		},
		{
			"key": "homeLoanId",
			"value": "",
			"type": "string"
		},
		{
			"key": "carLoanId",
			"value": "",
			"type": "string"
		},
		{
			"key": "personalLoanId",
			"value": "",
			"type": "string"
		}
	]
} 