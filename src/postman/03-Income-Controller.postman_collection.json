{
	"info": {
		"_postman_id": "income-controller-ywc-api",
		"name": "YWC API - Income Controller",
		"description": "Complete Income Controller testing with all CRUD operations for the YWC Financial Forms API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Login for Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.token) {",
									"        pm.collectionVariables.set('authToken', response.data.token);",
									"        pm.collectionVariables.set('coachId', response.data.user.id);",
									"        console.log('Token saved:', response.data.token);",
									"        console.log('Coach ID:', response.data.user.id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"coach@ywc.com\",\n  \"password\": \"coach123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal details created for testing', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.personal_id) {",
									"        pm.collectionVariables.set('personalId', response.data.personal_id);",
									"        console.log('Test Personal ID saved:', response.data.personal_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coach_id\": \"{{coachId}}\",\n  \"applicant_type\": \"PrimaryApplicant\",\n  \"salutation\": \"Mr.\",\n  \"first_name\": \"Income\",\n  \"last_name\": \"Tester\",\n  \"street\": \"Test Street\",\n  \"house_number\": \"456\",\n  \"postal_code\": \"54321\",\n  \"city\": \"Munich\",\n  \"email\": \"income.tester@example.com\",\n  \"phone\": \"+49987654321\",\n  \"marital_status\": \"Single\",\n  \"birth_date\": \"1985-05-15\",\n  \"birth_place\": \"Munich\",\n  \"nationality\": \"German\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/personal-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Income CRUD Operations",
			"item": [
				{
					"name": "Create Income Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income details created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('income_id');",
									"    ",
									"    if (response.data && response.data.income_id) {",
									"        pm.collectionVariables.set('incomeId', response.data.income_id);",
									"        console.log('Income ID saved:', response.data.income_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"gross_income\": 5000.00,\n  \"net_income\": 3500.00,\n  \"tax_class\": \"1\",\n  \"tax_id\": \"12345678901\",\n  \"number_of_salaries\": 12,\n  \"child_benefit\": 250.00,\n  \"other_income\": 500.00,\n  \"income_trade_business\": 1000.00,\n  \"income_self_employed_work\": 800.00,\n  \"income_side_job\": 400.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Income by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('income_id');",
									"    pm.expect(response.data).to.have.property('gross_income');",
									"    pm.expect(response.data).to.have.property('net_income');",
									"    console.log('Income details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/{{incomeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"{{incomeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Income by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income by personal ID retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Income records for person:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Income Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('All income records retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Total income records:', response.data.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Income Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income details updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('income_id');",
									"    console.log('Updated income details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gross_income\": 5500.00,\n  \"net_income\": 3800.00,\n  \"tax_class\": \"2\",\n  \"child_benefit\": 300.00,\n  \"other_income\": 600.00,\n  \"income_trade_business\": 1200.00,\n  \"income_self_employed_work\": 900.00,\n  \"income_side_job\": 500.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income/{{incomeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"{{incomeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial Update Income Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income details partially updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Partially updated income:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gross_income\": 6000.00,\n  \"net_income\": 4000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income/{{incomeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"{{incomeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Income Analysis",
			"item": [
				{
					"name": "Get Income Summary by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income summary retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Income summary:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/personal/{{personalId}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"personal",
								"{{personalId}}",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Income Range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Income filter by range successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Filtered income records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income?min_gross_income=4000&max_gross_income=7000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							],
							"query": [
								{
									"key": "min_gross_income",
									"value": "4000"
								},
								{
									"key": "max_gross_income",
									"value": "7000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Create with Invalid Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid personal ID rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"invalid-uuid\",\n  \"gross_income\": 5000.00,\n  \"net_income\": 3500.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Negative Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Negative income values rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"gross_income\": -1000.00,\n  \"net_income\": -500.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Non-existent Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Non-existent income update rejected', function () {",
									"    pm.response.to.have.status(404);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Not found error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gross_income\": 5000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income/550e8400-e29b-41d4-a716-446655440000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"550e8400-e29b-41d4-a716-446655440000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Multiple Income Records",
			"item": [
				{
					"name": "Create Secondary Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Secondary income created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.income_id) {",
									"        pm.collectionVariables.set('secondaryIncomeId', response.data.income_id);",
									"        console.log('Secondary Income ID saved:', response.data.income_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"gross_income\": 2000.00,\n  \"net_income\": 1500.00,\n  \"tax_class\": \"6\",\n  \"number_of_salaries\": 12,\n  \"income_side_job\": 2000.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/income",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Income for Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Multiple income records retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    pm.expect(response.data.length).to.be.at.least(2);",
									"    console.log('Multiple income records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Delete Primary Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Primary income deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Primary income deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/{{incomeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"{{incomeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Secondary Income",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Secondary income deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Secondary income deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/income/{{secondaryIncomeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"income",
								"{{secondaryIncomeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Test personal details deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Test personal details deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/personal-details/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-login if no token exists",
					"if (!pm.collectionVariables.get('authToken')) {",
					"    console.log('No auth token found, will need to login first');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "coachId",
			"value": "",
			"type": "string"
		},
		{
			"key": "personalId",
			"value": "",
			"type": "string"
		},
		{
			"key": "incomeId",
			"value": "",
			"type": "string"
		},
		{
			"key": "secondaryIncomeId",
			"value": "",
			"type": "string"
		}
	]
} 