{
	"info": {
		"_postman_id": "expenses-controller-ywc-api",
		"name": "YWC API - Expenses Controller",
		"description": "Complete Expenses Controller testing with all CRUD operations for the YWC Financial Forms API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Login for Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.token) {",
									"        pm.collectionVariables.set('authToken', response.data.token);",
									"        pm.collectionVariables.set('coachId', response.data.user.id);",
									"        console.log('Token saved:', response.data.token);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"coach@ywc.com\",\n  \"password\": \"coach123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Personal details created for testing', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.personal_id) {",
									"        pm.collectionVariables.set('personalId', response.data.personal_id);",
									"        console.log('Test Personal ID saved:', response.data.personal_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coach_id\": \"{{coachId}}\",\n  \"applicant_type\": \"PrimaryApplicant\",\n  \"salutation\": \"Ms.\",\n  \"first_name\": \"Expense\",\n  \"last_name\": \"Tracker\",\n  \"street\": \"Budget Street\",\n  \"house_number\": \"789\",\n  \"postal_code\": \"67890\",\n  \"city\": \"Frankfurt\",\n  \"email\": \"expense.tracker@example.com\",\n  \"phone\": \"+49555444333\",\n  \"marital_status\": \"Married\",\n  \"birth_date\": \"1988-08-20\",\n  \"birth_place\": \"Frankfurt\",\n  \"nationality\": \"German\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/personal-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Expenses CRUD Operations",
			"item": [
				{
					"name": "Create Expenses Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses details created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('expenses_id');",
									"    ",
									"    if (response.data && response.data.expenses_id) {",
									"        pm.collectionVariables.set('expensesId', response.data.expenses_id);",
									"        console.log('Expenses ID saved:', response.data.expenses_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"cold_rent\": 800.00,\n  \"electricity\": 85.00,\n  \"living_expenses\": 450.00,\n  \"gas\": 65.00,\n  \"telecommunication\": 55.00,\n  \"account_maintenance_fee\": 12.00,\n  \"alimony\": 0.00,\n  \"subscriptions\": 35.00,\n  \"other_expenses\": 180.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Expenses by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('expenses_id');",
									"    pm.expect(response.data).to.have.property('cold_rent');",
									"    pm.expect(response.data).to.have.property('living_expenses');",
									"    console.log('Expenses details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/{{expensesId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expensesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Expenses by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses by personal ID retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Expense records for person:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Expenses Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('All expenses records retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log('Total expense records:', response.data.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Expenses Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses details updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('expenses_id');",
									"    console.log('Updated expenses details:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cold_rent\": 850.00,\n  \"electricity\": 90.00,\n  \"living_expenses\": 500.00,\n  \"gas\": 70.00,\n  \"telecommunication\": 60.00,\n  \"account_maintenance_fee\": 15.00,\n  \"alimony\": 200.00,\n  \"subscriptions\": 40.00,\n  \"other_expenses\": 200.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses/{{expensesId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expensesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial Update Expenses Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses details partially updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Partially updated expenses:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cold_rent\": 900.00,\n  \"electricity\": 95.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses/{{expensesId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expensesId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Expenses Analysis",
			"item": [
				{
					"name": "Get Expenses Summary by Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses summary retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Expenses summary:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/personal/{{personalId}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"personal",
								"{{personalId}}",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter by Rent Range",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Expenses filter by rent range successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Filtered expense records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses?min_rent=700&max_rent=1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							],
							"query": [
								{
									"key": "min_rent",
									"value": "700"
								},
								{
									"key": "max_rent",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Create with Invalid Personal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid personal ID rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"invalid-uuid\",\n  \"cold_rent\": 800.00,\n  \"living_expenses\": 400.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create with Negative Expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Negative expense values rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    console.log('Validation error:', response.error);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"cold_rent\": -500.00,\n  \"living_expenses\": -300.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Multiple Expense Records",
			"item": [
				{
					"name": "Create Business Expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Business expenses created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    ",
									"    if (response.data && response.data.expenses_id) {",
									"        pm.collectionVariables.set('businessExpensesId', response.data.expenses_id);",
									"        console.log('Business Expenses ID saved:', response.data.expenses_id);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"personal_id\": \"{{personalId}}\",\n  \"cold_rent\": 200.00,\n  \"electricity\": 25.00,\n  \"telecommunication\": 80.00,\n  \"subscriptions\": 150.00,\n  \"other_expenses\": 300.00\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Expenses for Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Multiple expense records retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    pm.expect(response.data.length).to.be.at.least(2);",
									"    console.log('Multiple expense records:', response.data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/personal/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"personal",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Delete Primary Expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Primary expenses deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Primary expenses deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/{{expensesId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{expensesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Business Expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Business expenses deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Business expenses deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/expenses/{{businessExpensesId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"expenses",
								"{{businessExpensesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Personal Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Test personal details deleted successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    console.log('Test personal details deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/personal-details/{{personalId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"personal-details",
								"{{personalId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "coachId",
			"value": "",
			"type": "string"
		},
		{
			"key": "personalId",
			"value": "",
			"type": "string"
		},
		{
			"key": "expensesId",
			"value": "",
			"type": "string"
		},
		{
			"key": "businessExpensesId",
			"value": "",
			"type": "string"
		}
	]
} 